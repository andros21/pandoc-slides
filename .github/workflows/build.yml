---
name: build pandoc-slides

"on":
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - apko/pandoc-slides.yaml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  apko:
    name: build pandoc-slides
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
      - name: checkout project
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - name: setup qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18
      - name: apko snapshot
        id: apko
        uses: chainguard-images/actions/apko-snapshot@main
        with:
          config: apko/pandoc-slides.yaml
          base-tag: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          target-tag: devel
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          token: ${{ secrets.GITHUB_TOKEN }}
          archs: x86_64,aarch64
      - name: smoke test
        run: |
          set -x
          OCI=${{ steps.apko.outputs.digest }} make container
          make example
      - name: prepare html assets
        run: |
          set -x
          mkdir html/
          mv example.html html/index.html
          mv css/ pd-images/ media/ html/
      - name: publish to gh-pages
        uses: peaceiris/actions-gh-pages@de7ea6f8efb354206b205ef54722213d99067935
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: html/
      - name: scan vulns
        uses: chainguard-images/actions/vul-scans@main
        with:
          image: ${{ steps.apko.outputs.digest }}
          RUN_SNYK: 'false'
          DOCKER_LOGIN: 'false'
      # tag latest only after tests and
      # after attach sbom, signature, attestation
      - name: tag pandoc-slides (latest)
        run: |
          set -x
          crane tag "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:devel" latest
